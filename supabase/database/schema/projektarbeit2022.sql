-- Author: Fabian, Laura

drop table if exists role_permissions cascade;
drop table if exists roles cascade;
drop table if exists permissions cascade;
drop table if exists product_requirements cascade;
drop table if exists requirements cascade;
drop table if exists user_points cascade;
drop table if exists user_answers cascade;
drop table if exists user_finished_lessons cascade;
drop table if exists user_lesson_progress cascade;
drop table if exists user_hints cascade;
drop table if exists questions cascade;
drop table if exists lessons cascade;
drop table if exists user_feedback cascade;
drop table if exists product_catalogs cascade;
drop table if exists catalogs cascade;
drop table if exists profiles cascade;
drop table if exists products cascade;


create table profiles
(
    id       uuid                         not null
        primary key
        references auth.users
            on delete cascade,
    username text                         not null,
    teacher  uuid
                                          references profiles
                                              on update cascade on delete set null,
    avatar   text default 'fhdo'::text    not null,
    role     text default 'student'::text not null
);

create table lessons
(
    description text                                 not null,
    title       text                                 not null,
    points      integer                              not null,
    user_id     uuid                                 not null
        references profiles
            on update cascade on delete cascade,
    published   boolean   default false              not null,
    example     boolean   default false              not null,
    uuid        uuid      default uuid_generate_v4() not null
        primary key,
    created_at  timestamp default CURRENT_TIMESTAMP  not null
);

create table questions
(
    question      text,
    solution      jsonb,
    question_type text                            not null,
    options       jsonb,
    hint          text,
    position      integer                         not null,
    lesson_uuid   uuid
        references lessons
            on update cascade on delete cascade,
    uuid          uuid default uuid_generate_v4() not null
        constraint question_pkey
            primary key
);

create table roles
(
    id          serial
        primary key,
    name        text not null
        unique,
    description text
);

create table permissions
(
    id          serial
        primary key,
    name        text not null
        unique,
    description text
);

create table role_permissions
(
    role_id       integer not null
        references roles,
    permission_id integer not null
        references permissions,
    primary key (role_id, permission_id)
);

create table catalogs
(
    catalog_id   serial
        primary key,
    catalog_name varchar(255)          not null,
    user_id      uuid                  not null
        constraint catalogs_owner_id_fkey
            references profiles
            on update cascade on delete cascade,
    example      boolean default false not null
);

create table requirements
(
    requirement_id serial
        primary key,
    catalog_id     integer not null
        references catalogs
            on delete cascade,
    reqid          varchar(255),
    title          varchar(255),
    description    text
);

create table products
(
    product_id   serial
        primary key,
    product_name varchar(255) not null
        constraint unique_product_name
            unique,
    product_url  text         not null
);

create table product_requirements
(
    product_requirement_id integer default nextval('productrequirements_product_requirement_id_seq'::regclass) not null
        constraint productrequirements_pkey
            primary key,
    product_id             integer                                                                             not null
        constraint productrequirements_product_id_fkey
            references products,
    requirement_id         integer                                                                             not null
        constraint productrequirements_requirement_id_fkey
            references requirements
            on delete cascade,
    qualification          text,
    comment                text
);

create table user_points
(
    id      bigint generated by default as identity
        primary key,
    user_id uuid                   not null
        references profiles
            on delete cascade,
    points  real default '0'::real not null
);

create table user_answers
(
    user_id     uuid                           not null
        references profiles
            on update cascade on delete cascade,
    lesson_id   uuid                           not null
        references lessons
            on update cascade on delete cascade,
    answer      jsonb,
    uuid        uuid default gen_random_uuid() not null
        primary key,
    result      jsonb,
    question_id uuid                           not null
        references questions
            on update cascade on delete cascade,
    max_points  real
);

create table user_finished_lessons
(
    id                      uuid    default gen_random_uuid() not null
        primary key,
    user_id                 uuid                              not null
        references profiles
            on update cascade on delete cascade,
    lesson_id               uuid                              not null
        references lessons
            on update cascade on delete cascade,
    finished                boolean,
    is_started              boolean,
    user_points             real    default '0'::real,
    finished_for_first_time boolean,
    used_hints              integer default 0
);

create table user_lesson_progress
(
    id        uuid default gen_random_uuid() not null
        primary key,
    lesson_id uuid                           not null
        references lessons
            on update cascade on delete cascade,
    user_id   uuid                           not null
        references profiles
            on update cascade on delete cascade,
    answers   jsonb
);

create table user_hints
(
    id          uuid default gen_random_uuid() not null
        primary key,
    user_id     uuid                           not null
        references profiles
            on update cascade on delete cascade,
    question_id uuid                           not null
        references questions
            on update cascade on delete cascade,
    lesson_id   uuid                           not null
        references lessons
            on update cascade on delete cascade
);

create table user_feedback
(
    id         bigint generated by default as identity
        primary key,
    created_at timestamp with time zone default now()      not null,
    feedback   text                                        not null,
    user_id    uuid                     default auth.uid() not null
        references profiles
            on delete cascade
);

create table product_catalogs
(
    id         bigint generated by default as identity
        primary key,
    catalog_id integer not null
        references catalogs
            on delete cascade,
    product_id integer not null
        references products
);